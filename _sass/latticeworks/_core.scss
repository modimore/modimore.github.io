@import  "_util";

// Initialization mixin for LatticeWork
// Include when using LatticeWork classes
@mixin latticeworks-init {
  * {
    box-sizing: border-box;
  }
}

// Latticework cell styles
// Common cell styling
%lw-cell-common {
  position: relative;
  min-height: 1px;
  float: left;
}

// Generates $n cell classes with increasing percentage widths
@mixin lw-cells($n, $class-base: 'lw-cell') {
  @for $i from 1 to $n+1 {
    .#{$class-base}-#{$n}-#{$i} {
      @extend %lw-cell-common;
      width: $i / $n * 100%;
    }
  }
}

// Cell padding utility
@mixin lw-cells-pad($n, $padding, $class-base: 'lw-cell') {
  $padded-classes: ();

  @for $i from 1 through $n {
    $padded-classes: append($padded-classes, unquote('.#{$class-base}-#{$n}-#{$i}'), 'comma')
  }

  #{$padded-classes} {
    padding: $padding;
  }
}

// Adjust cell widths under screen width breakpoint
@mixin lw-cells-adjust-at($n, $screen-width-max, $cutoff, $class-base: 'lw-cell') {
  @media screen and (max-width: $screen-width-max) {
    @if $cutoff != 1 {
      @for $i from 1 to $cutoff {
        .#{$class-base}-#{$n}-#{$i} { width: $i / $cutoff * 100%; }
      }
    }

    $cutoff-classes: ();

    @for $i from $cutoff through $n {
      $cutoff-classes: append($cutoff-classes, unquote('.#{$class-base}-#{$n}-#{$i}'), 'comma');
    }

    #{$cutoff-classes} {
      width: 100%;
    }
  }
}

/* Latticework group styles */
%lw-group {
  width: 100%;
  margin-left: 0px;
  margin-right: 0px;
  @extend %clearfix;
}

@mixin lw-group {
  @extend %lw-group;
  @content;
}

// Latticework box styles
// Basic Box
%lw-box {
  margin-left: auto;
  margin-right: auto;
  min-height: 1px;
  @extend %clearfix;
}

@mixin lw-box {
  @extend %lw-box;
  @content;
}
