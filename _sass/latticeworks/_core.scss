@import  "_util";

/* Property resets */
// Initialization mixin for LatticeWork
// Include when using LatticeWork classes
@mixin latticeworks-init {
  * {
    box-sizing: border-box;
  }
}

/* Latticework cell styles */
// Common cell styling
%lw-cell-common {
  position: relative;
  min-height: 1px;
  float: left;
}

// Generates $n cell classes with increasing percentage widths
@mixin lw-cells($n) {
  @for $i from 1 to $n+1 {
    .lw-cell-#{$n}-#{$i} {
      @extend %lw-cell-common;
      width: $i / $n * 100%;
    }
  }
}

@mixin lw-cells-pad($n, $padding) {
  $padded-classes: ();


  @for $i from 1 through $n {
    $padded-classes: append($padded-classes, unquote('lw-cell-#{$n}-#{$i}'), 'comma')
  }

  #{$padded-classes} {
    padding: $padding;
  }
}

// Adjust cell widths under screen width breakpoint
// When @including, make sure to use unique $n and $cutoff combinations
// Failing to do so will cause an error
@mixin lw-cells-adjust-at($n, $screen-width-max, $cutoff) {
  @media screen and (max-width: $screen-width-max) {
    @if $cutoff != 1 {
      @for $i from 1 to $cutoff {
        .lw-cell-#{$n}-#{$i} { width: $i / $cutoff * 100%; }
      }
    }

    $cutoff-classes: ();

    @for $i from $cutoff through $n {
      $cutoff-classes: append($cutoff-classes, unquote('.lw-cell-#{$n}-#{$i}'), 'comma');
    }

    #{$cutoff-classes} {
      width: 100%;
    }
  }
}

/* Latticework group styles */
@mixin lw-group {
  .lw-group {
    position: relative;
    width: 100%;
    margin-left: 0px;
    margin-right: 0px;
    @extend %clearfix;
  }
}

/* Latticework box styles */
// Common box styling
%lw-box-common {
  margin-left: auto;
  margin-right: auto;
  min-height: 1px;
  @extend %clearfix;
}

// Full-width box
@mixin lw-box($size) {
  .lw-box-#{$size} {
    @extend %lw-box-common;
  }
}

// Fixed-width box
@mixin lw-box-static($size, $lw-box-width) {
  .lw-box-static-#{$size} {
    @extend %lw-box-common;
    width: $lw-box-width;
  }
}

// Adjust box width under screen width breakpoint
@mixin lw-box-static-cutoff($size, $screen-width-max, $lw-box-width) {
  @media screen and (max-width: $screen-width-max) {
    .lw-box-static-#{$size} {
      width: $lw-box-width;
    }
  }
}
