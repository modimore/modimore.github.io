@import  "_util";

/* Property resets */
// Initialization mixin for LatticeWork
// Include when using LatticeWork classes
@mixin latticeworks-init {
  * {
    box-sizing: border-box;
  }
}

/* Latticework segment styles */
// Common segment styling
%lw-seg-common {
  position: relative;
  min-height: 1px;
  float: left;
}

// Generates $n segment classes with increasing percentage widths
@mixin lw-segments($n) {
  @for $i from 1 to $n+1 {
    .lw-seg-#{$n}-#{$i} {
      @extend %lw-seg-common;
      width: $i / $n * 100%;
    }
  }
}

// Adjust segment widths under screen width breakpoint
@mixin lw-segments-adjust($n, $screen-width-max, $cutoff) {
  @media screen and (max-width: $screen-width-max) {
    @for $i from 1 to $cutoff {
      .lw-seg-#{$n}-#{$i} {
        width: $i / $cutoff * 100%;
      }
    }

    %lw-full-width { width: 100%; }

    @for $i from $cutoff through $n {
      .lw-seg-#{$n}-#{$i} { @extend %lw-full-width; }
    }
  }
}

// Adjust all segment widths to 100% under screen width breakpoint
@mixin lw-segments-adjust-all($n, $screen-width-max) {
  @media screen and (max-width: $screen-width-max) {
    // Directive error if same nae as in lw-segments-adjust is used
    %lw-full-width-all { width: 100%; }

    @for $i from 1 through $n {
      .lw-seg-#{$n}-#{$i} { @extend %lw-full-width-all; }
    }
  }
}

@mixin lw-segments-pad($n, $padding) {
  %lw-seg-padded {
    padding: $padding;
  }

  @for $i from 1 through $n {
    .lw-seg-#{$n}-#{$i} {
      @extend %lw-seg-padded;
    }
  }
}

/* Latticework bar styles */
// Common bar styling
%lw-bar-common {
  position: relative;
  width: 100%;
  margin-left: 0px;
  margin-right: 0px;
  @extend %clearfix;
}

@mixin lw-bar($size) {
  .lw-bar-#{$size} {
    @extend %lw-bar-common;
  }
}

/* Latticework lattice styles */
// Common lattice styling
%lattice-common {
  margin-left: auto;
  margin-right: auto;
  min-height: 1px;
  @extend %clearfix;
}

// Full-width lattice
@mixin lattice($size) {
  .lattice-#{$size} {
    @extend %lattice-common;
  }
}

// Fixed-width lattice
@mixin lattice-static($size, $lattice-width) {
  .lattice-static-#{$size} {
    @extend %lattice-common;
    width: $lattice-width;
  }
}

// Adjust lattice width under screen width breakpoint
@mixin lattice-static-cutoff($size, $screen-width-max, $lattice-width) {
  @media screen and (max-width: $screen-width-max) {
    .lattice-static-#{$size} {
      width: $lattice-width;
    }
  }
}
