<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>modimore.github.io</title><link href="https://modimore.github.io/" rel="alternate"></link><link href="https://modimore.github.io/feeds/all.atom.xml" rel="self"></link><id>https://modimore.github.io/</id><updated>2018-05-07T00:00:00-04:00</updated><entry><title>BreezeBlocks 0.3.0 Release</title><link href="https://modimore.github.io/articles/breezeblocks-030-release.html" rel="alternate"></link><published>2018-05-07T00:00:00-04:00</published><updated>2018-05-07T00:00:00-04:00</updated><author><name>Quinn Mortimer</name></author><id>tag:modimore.github.io,2018-05-07:/articles/breezeblocks-030-release.html</id><summary type="html">&lt;p&gt;The other day I released &lt;a href="https://pypi.org/project/breezeblocks/0.3.0/"&gt;version 0.3.0&lt;/a&gt; of BreezeBlocks. I think
development has been going rather well, though I'm probably going to slow
down a bit on it again. Any effort I choose to put into it would probably be
better spent on documentation than features at this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The other day I released &lt;a href="https://pypi.org/project/breezeblocks/0.3.0/"&gt;version 0.3.0&lt;/a&gt; of BreezeBlocks. I think
development has been going rather well, though I'm probably going to slow
down a bit on it again. Any effort I choose to put into it would probably be
better spent on documentation than features at this point, and of course on
using it in other stuff. This means for a while the functionality and interface
will remain essentially the same.&lt;/p&gt;
&lt;p&gt;One of the most interesting things about this project in my opinion has been
figuring out how to use object-oriented techniques to make the package while
trying to make it more readily usable with some of the other paradigms Python
supports. ORM and Active Record are some of the strongest examples of
object-oriented trying to coerce everything into its own paradigm. Hopefully
by minimizing their influence, BreezeBlocks can more easily fit in with
functional, procedural, or declarative code. Maybe others will feel the same
way.&lt;/p&gt;</content><category term="Programming"></category><category term="Python"></category><category term="SQL"></category></entry><entry><title>BreezeBlocks</title><link href="https://modimore.github.io/articles/breezeblocks.html" rel="alternate"></link><published>2018-02-18T00:00:00-05:00</published><updated>2018-02-18T00:00:00-05:00</updated><author><name>Quinn Mortimer</name></author><id>tag:modimore.github.io,2018-02-18:/articles/breezeblocks.html</id><summary type="html">&lt;p&gt;BreezeBlocks is a Python package for RDBMS-independent SQL generation. From
Python objects representing the schema of a database, you can build and execute
queries and other statements.&lt;/p&gt;
&lt;p&gt;Compared to other packages that meet a similar need, BreezeBlocks follows more
of an Active Statement model than and Active Record model. A …&lt;/p&gt;</summary><content type="html">&lt;p&gt;BreezeBlocks is a Python package for RDBMS-independent SQL generation. From
Python objects representing the schema of a database, you can build and execute
queries and other statements.&lt;/p&gt;
&lt;p&gt;Compared to other packages that meet a similar need, BreezeBlocks follows more
of an Active Statement model than and Active Record model. A SQL statement's
representation has an execute method that will handle the details of getting a
database connection and managing a transaction. The user should only need to
be responsible for shaping the statement the way they want.&lt;/p&gt;
&lt;p&gt;The source code is available on &lt;a href="https://github.com/modimore/BreezeBlocks"&gt;GitHub&lt;/a&gt;, the documentation is on
&lt;a href="https://breezeblocks.readthedocs.io/en/latest"&gt;Read the Docs&lt;/a&gt;, and it is available to download from &lt;a href="https://pypi.python.org/pypi/breezeblocks/"&gt;PyPi&lt;/a&gt;.&lt;/p&gt;</content><category term="Programming"></category><category term="Python"></category><category term="SQL"></category></entry><entry><title>Discord Dice Bot</title><link href="https://modimore.github.io/articles/discord-dice-bot.html" rel="alternate"></link><published>2018-02-18T00:00:00-05:00</published><updated>2018-02-18T00:00:00-05:00</updated><author><name>Quinn Mortimer</name></author><id>tag:modimore.github.io,2018-02-18:/articles/discord-dice-bot.html</id><summary type="html">&lt;p&gt;A while ago when Discord I was in a D&amp;amp;D group that was playing over Discord,
and we needed a good dice-roller to use in-chat. I wrote up this bot using
the &lt;a href="https://github.com/"&gt;Discord API wrapper&lt;/a&gt; for Python so we could get pseudo-random
results in-chat.&lt;/p&gt;
&lt;p&gt;That D&amp;amp;D group is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A while ago when Discord I was in a D&amp;amp;D group that was playing over Discord,
and we needed a good dice-roller to use in-chat. I wrote up this bot using
the &lt;a href="https://github.com/"&gt;Discord API wrapper&lt;/a&gt; for Python so we could get pseudo-random
results in-chat.&lt;/p&gt;
&lt;p&gt;That D&amp;amp;D group is not meeting currently, but a couple of other groups have
taken up using an instance of the bot named Pythia I keep running on Heroku.
If you'd like to have her roll dice for your group, you can do so &lt;a href="https://discordapp.com/oauth2/authorize?client_id=202861748133298177&amp;amp;scope=bot&amp;amp;permissions=3072"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="Programming"></category><category term="Python"></category></entry></feed>